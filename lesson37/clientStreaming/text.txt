openapi: "3.0.3"
info:
  title: API Gateway Service
  version: '1.0'
servers:
  - url: https://panda.com.uz/api
  - url: http://localhost:8081/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    AcceptLanguage:
      name: Accept-Language
      in: header
      required: true
      schema:
        type: string
        enum: [uz, ru]
        example: "uz"
      description: "Language preference for response messages"

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login with phone number
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_num
                - device_id
                - fcm_token
              properties:
                phone_num:
                  type: string
                  example: "+998901234567"
                device_id:
                  type: string
                  example: "1234567890"
                fcm_token:
                  type: string
                  example: "1234567890"

      responses:
        200:
          description: Successful login
          content:
            application/json:
              example:
                success: true
                data:
                  message: "OTP sent successfully"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Bad request
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid phone number format"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /auth/verify-otp:
    post:
      tags:
        - Auth
      summary: Verify OTP code
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_num
                - otp
              properties:
                phone_num:
                  type: string
                  example: "+998901234567"
                otp:
                  type: string
                  example: "123456"
      responses:
        200:
          description: OTP verified successfully
          content:
            application/json:
              example:
                success: true
                data:
                  access_token: "eyJhbGc..."
                  refresh_token: "eyJhbGc..."
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh access token
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        200:
          description: Token refreshed successfully
          content:
            application/json:
              example:
                success: true
                data:
                  access_token: "eyJhbGc..."
                  refresh_token: "eyJhbGc..."
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /auth/logout:
    post:
      tags:
        - Auth
      summary: Logout user
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        200:
          description: Logged out successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "successfully logged out"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User details
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123"
                  name: "John Doe"
                  phone_num: "+998901234567"
                  picture: "https://example.com/avatar.jpg"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: User not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "User not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    delete:
      tags:
        - Users
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "User deleted successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: User not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "User not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    put:
      tags:
        - Users
      summary: Update user profile
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone_num:
                  type: string
                picture_link:
                  type: string
      responses:
        200:
          description: User updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "User updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid input
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid input data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/by-phone:
    get:
      tags:
        - Users
      summary: Get user by phone number
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: phone_num
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: User details
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123"
                  name: "John Doe"
                  phone_num: "+998901234567"
                  picture: "https://example.com/avatar.jpg"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: User not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "User not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/list:
    get:
      tags:
        - Users
      summary: List users
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        200:
          description: List of users
          content:
            application/json:
              example:
                success: true
                data:
                  users:
                    - id: "123"
                      name: "John Doe"
                      phone_num: "+998901234567"
                  total: 50
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/me:
    get:
      tags:
        - Users
      summary: Get me
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        200:
          description: User details
          content:
            application/json:
              example:
                success: true
                data:
                  id: "uuid"
                  name: "John Doe"
                  phone_num: "+998901234567"
                  picture: "https://example.com/avatar.jpg"
                  allowed_delivery_type: ["delivery", "pickup"]
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/me/name:
    put:
      tags:
        - Users
      summary: Update user name
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: User name updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "uuid"
                  name: "John Doe"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid request body
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid request body"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/me/lang:
    put:
      tags:
        - Users
      summary: Update user language
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  example: "uz"
      responses:
        200:
          description: User language updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "uuid"
                  lang: "uz"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid request body
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid request body"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /users/me/delivery-type:
    put:
      tags:
        - Users
      summary: Update user delivery type
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                allowed_delivery_type:
                  type: array
                  items:
                    type: string
                    example: "delivery"
      responses:
        200:
          description: User delivery type updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "uuid"
                  allowed_delivery_type: ["delivery", "pickup"]
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid request body
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid request body"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /auth/create-user-with-device-id:
    post:
      tags:
        - Auth
      summary: Create user with device id
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
                  example: "1234567890"
                device_id:
                  type: string
                  example: "1234567890"
      responses:
        200:
          description: User created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  user_id: "123"
                  is_registered: false
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid device ID
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid device ID"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/files:
    post:
      tags:
        - Adverts
      security:
        - bearerAuth: [ ]
      summary: Upload advert files
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: File uploaded successfully
          content:
            application/json:
              example:
                success: true
                data:
                  file_url: "https://pandapp-advert.s3.eu-north-1.amazonaws.com/nature.jpg"
                  file_name: "nature.jpg"
                  size: 245677
                  height: 640
                  width: 320
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: File upload failed
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "File upload failed"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/files/{file_name}:
    delete:
      tags:
        - Adverts
      security:
        - bearerAuth: [ ]
      summary: Deletes uploaded file
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: File deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  file_name: "nature.jpg"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: File not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "File not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /regions/{id}:
    get:
      tags:
        - Regions
      summary: Get region by ID
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Region details
          content:
            application/json:
              example:
                success: true
                data:
                  id: 1
                  name: "Tashkent"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Region not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Region not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    put:
      tags:
        - Regions
      summary: Update region
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lang:
                  type: string
      responses:
        200:
          description: Region updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Region updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
    delete:
      tags:
        - Regions
      summary: Delete region
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Region deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Region deleted successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"

  /regions:
    post:
      tags:
        - Regions
      summary: Create region
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lang:
                  type: string
      responses:
        200:
          description: Region created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Region created successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid region data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid region data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    get:
      tags:
        - Regions
      summary: List regions
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: parent_id
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: type
          in: query
          required: true
          schema:
            type: string
            example: "region or district"
      responses:
        200:
          description: List of regions
          content:
            application/json:
              example:
                success: true
                data:
                  regions:
                    - id: 1
                      name: "Region 1"
                      lang: "uz"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /categories/{id}:
    get:
      tags:
        - Categories
      summary: Get category by ID
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Category details
          content:
            application/json:
              example:
                success: true
                data:
                  id: 1
                  name: "Electronics"
                  parent_id: 0
                  lang: "uz"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Category not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Category not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    put:
      tags:
        - Categories
      summary: Update category
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  example: { "uz": "Elektronika", "ru": "Электроника" }
                parent_id:
                  type: string
                  example: "e969300e-a450-43b6-97d4-a8a6dc6ac6f4"
                is_selling:
                  type: boolean
                  example: true
      responses:
        200:
          description: Category updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Category updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid category data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid category data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    delete:
      tags:
        - Categories
      summary: Delete category
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Category deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Category deleted successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Category not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Category not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /categories:
    post:
      tags:
        - Categories
      summary: Create category
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  example: { "uz": "Elektronika", "ru": "Электроника" }
                parent_id:
                  type: string
                  example: "e969300e-a450-43b6-97d4-a8a6dc6ac6f4"
                is_selling:
                  type: boolean
                  example: true
      responses:
        200:
          description: Category created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Category created successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid category data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid category data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    get:
      tags:
        - Categories
      summary: List categories
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: parent_id
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: List of categories
          content:
            application/json:
              example:
                success: true
                data:
                  categories:
                    - id: 1
                      name: "Elektronika"
                      parent_id: "e969300e-a450-43b6-97d4-a8a6dc6ac6f4"
                      is_selling: true
                    - id: 2
                      name: "Smartphones"
                      parent_id: "e969300e-a450-43b6-97d4-a8a6dc6ac6f4"
                      is_selling: true
                  total: 50
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts:
    post:
      tags:
        - Adverts
      summary: Create new advert
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "iPhone 13 Pro Max"
                description:
                  type: string
                  example: "Brand new iPhone, still in box"
                price:
                  type: number
                  example: 999
                is_new:
                  type: integer
                  example: 1
                weight_from:
                  type: number
                  example: 1
                weight_to:
                  type: number
                  example: 1
                location:
                  type: string
                  example: "(41.311081, 69.240592)"
                category_id:
                  type: string
                  example: "e969300e-a450-43b6-97d4-a8a6dc6ac6f4"
                region_id:
                  type: integer
                  example: 1
                is_security:
                  type: boolean
                  example: true
                media:
                  type: object
                  example: { "media_url": [ "image1.jpg", "image2.jpg" ], "media_name": [ "image1.jpg", "image2.jpg" ] }
                tariff_weight_id:
                  type: string
                  example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        200:
          description: Advert created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123"
                  message: "Advert created successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid advert data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid advert data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    get:
      tags:
        - Adverts
      summary: List adverts
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: user_id
          in: query
          required: false
          schema:
            type: string
        - name: category_id
          in: query
          required: false
          schema:
            type: string
        - name: region_id
          in: query
          required: false
          schema:
            type: integer
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: integer
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: from_price
          in: query
          required: false
          schema:
            type: integer
        - name: to_price
          in: query
          required: false
          schema:
            type: integer
        - name: is_new
          in: query
          required: false
          schema:
            type: integer
        - name: is_security
          in: query
          required: false
          schema:
            type: boolean
        - name: is_security_delivery
          in: query
          required: false
          schema:
            type: boolean
        - name: order_by
          in: query
          required: false
          schema:
            type: string
            enum:
              - by_date
              - by_min_price
              - by_max_price
      responses:
        200:
          description: List of adverts
          content:
            application/json:
              example:
                success: true
                data:
                  adverts:
                    - id: "123"
                      title: "iPhone 13 Pro Max"
                      price: 999.99
                      status: 1
                  total: 50
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/{id}:
    get:
      tags:
        - Adverts
      summary: Get advert by ID
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Advert details
          content:
            application/json:
              example:
                success: true
                data:
                  id: "084f0153-7dfe-497b-b8b9-adbc8d68dc9f"
                  name: "OK"
                  description: "zo'r"
                  price: 4000
                  is_new: 1
                  weight_from: 1
                  weight_to: 2
                  location: "(41.2743383,69.2049)"
                  category_id: "1e812345-a98e-449b-97d3-825b4454690f"
                  is_security: true
                  adverted_date: "2025-01-17T21:03:17.955999Z"
                  created_at: "2025-01-17 20:56:27.909592+05"
                  updated_at: "2025-01-17 20:56:27.909592+05"
                  user:
                    id: "4b24039b-677e-487d-bb64-dcb44b85f7cb"
                    name: "Abror"
                    allowed_delivery_type:
                      - "pickup"
                      - "fargo"
                      - "emu"
                      - "bts"
                      - "uzpost"
                  region:
                    id: 101
                    name: "Кунград"
                    parent_id: 5
                    parent_name: "Каракалпакстан"
                  media:
                    media_url:
                      - "https://pandapp-advert.s3.eu-north-1.amazonaws.com/391b75dc-3fbd-49fe-a15d-7e2965139a48217218547975935289.avif"
                    media_name:
                      - "391b75dc-3fbd-49fe-a15d-7e2965139a48217218547975935289.avif"
                  delivery_detail:
                    bts:
                      from_day: 1
                      to_day: 3
                      min_cost: 18000
                      name: "BTS"
                    emu:
                      from_day: 1
                      to_day: 3
                      min_cost: 15000
                      name: "EMU"
                    fargo:
                      from_day: 1
                      to_day: 3
                      min_cost: 20000
                      name: "FARGO"
                    pickup: {}
                    uzpost:
                      from_day: 1
                      to_day: 3
                      min_cost: 15000
                      name: "UZPOST"
                  tariff_weight_id:
                    type: string
                    example: "550e8400-e29b-41d4-a716-446655440000"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Advert not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Advert not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    put:
      tags:
        - Adverts
      summary: Update advert
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category_id:
                  type: integer
                region_id:
                  type: integer
                images:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Advert updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Advert updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid advert data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid advert data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Advert not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Advert not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    delete:
      tags:
        - Adverts
      summary: Delete advert
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Advert deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Advert deleted successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Advert not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Advert not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/change-status:
    put:
      tags:
        - Adverts
      summary: Change advert status
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - status
              properties:
                id:
                  type: string
                  example: "123"
                status:
                  type: integer
                  example: 1
      responses:
        200:
          description: Status changed successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Status updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid status
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid status"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Advert not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Advert not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/status/active:
    put:
      tags:
        - Adverts
      summary: Change advert status to archive
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  example: "123"
      responses:
        200:
          description: Status changed successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Status updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid status
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid status"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Advert not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Advert not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/status/archive:
    put:
      tags:
        - Adverts
      summary: Change advert status to archive
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  example: "123"
      responses:
        200:
          description: Status changed successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Status updated successfully"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid status
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid status"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Advert not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Advert not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/my:
    get:
      tags:
        - Adverts
      summary: Get user's adverts
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: status
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: is_saved
          in: query
          required: false
          schema:
            type: boolean
            example: true
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: List of user's adverts
          content:
            application/json:
              example:
                success: true
                data:
                  adverts:
                    - id: "123"
                      title: "iPhone 13 Pro Max"
                      price: 999.99
                      status: 1
                  total: 10
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/saved/{id}:
    post:
      tags:
        - Adverts
      summary: Add advert to saved list
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Added to saved successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Added to saved adverts"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid advert ID
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid advert ID"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    delete:
      tags:
        - Adverts
      summary: Delete advert
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: advert deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "advert deleted successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"

  /adverts/saved:
    get:
      tags:
        - Adverts
      summary: List adverts
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: List of adverts
          content:
            application/json:
              example:
                success: true
                data:
                  adverts:
                    - id: "123"
                      title: "iPhone 13 Pro Max"
                      price: 999.99
                      status: 1
                  total: 50
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders:
    post:
      tags:
        - Orders
      summary: Create order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advert_id:
                  type: string
                  example: "123"
                buyer_id:
                  type: string
                  example: "123"
                seller_id:
                  type: string
                  example: "123"
                delivery_type:
                  type: string
                  example: "delivery"
                card_id:
                  type: string
                  example: "123"
                price:
                  type: number
                  example: 100000
                commission:
                  type: number
                  example: 10000
                delivery_sum:
                  type: number
                  example: 10000
                buyer_data:
                  type: object
                  example: {
                    "first_name": "John",
                    "last_name": "Doe",
                    "middle_name": "Doe",
                    "phone_number": "+998901234567",
                    "region_id": 1,
                    "location": "(41.311081, 69.240592)",
                    "point_id": "123",
                    "address": "123"
                  }
      responses:
        200:
          description: Order created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123"
                  message: "Order created successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid order data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid order data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    get:
      tags:
        - Orders
      summary: Get filtered orders
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: seller_id
          in: query
          schema:
            type: string
        - name: buyer_id
          in: query
          schema:
            type: string
        - name: order_status
          in: query
          schema:
            type: string
            enum: ['ordered', 'cancelled', 'accepted', 'in_post', 'delivering', 'delivered', 'success', 'freeze', 'unknown']
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
      responses:
        200:
          description: List of orders
          content:
            application/json:
              example:
                success: true
                data:
                  orders:
                    - id: "123"
                      advert_image: "https://example.com/image.jpg"
                      advert_title: "iPhone 13 Pro"
                      price: 150000
                      delivery_type: "delivery"
                      order_status: "active"
                      region: "Tashkent"
                      parent_region: "Tashkent Region"
                      created_at: "2024-03-20T10:00:00Z"
                  total: 15
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Order details
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123"
                  advert_id: "456"
                  advert_image: "https://example.com/image.jpg"
                  advert_title: "iPhone 13 Pro"
                  commission: 10000
                  delivery_sum: 5000
                  price: 150000
                  order_status: "active"
                  region: "Tashkent"
                  parent_region: "Tashkent Region"
                  delivery_type: "delivery"
                  delivery_id: "789"
                  cancelled_id: null
                  cancelled_text: null
                  card_number: "**** 1234"
                  created_at: "2024-03-20T10:00:00Z"
                  updated_at: "2024-03-20T10:00:00Z"
                  buyer_data:
                    first_name: "John"
                    last_name: "Doe"
                    middle_name: "A."
                    phone_number: "+998901234567"
                    region_id: 1
                    location: "(41.311081, 69.240592)"
                    point_id: "101"
                  seller_data:
                    first_name: "Alice"
                    last_name: "Smith"
                    phone_number: "+998907654321"
                    region_id: 2
                    location: "(41.302692, 69.240311)"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Order not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Order not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    put:
      tags:
        - Orders
      summary: Update order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_status:
                  type: string
                  example: "cancelled"
                delivery_type:
                  type: string
                  example: "delivery"
                seller_data:
                  type: object
                  example: { "first_name": "John", "last_name": "Doe", "middle_name": "Doe", "phone_number": "+998901234567", "region_id": 1, "location": "(41.311081, 69.240592)" }
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid order data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid order data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Order not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Order not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
    delete:
      tags:
        - Orders
      summary: Delete order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Order deleted successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order deleted successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Order not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Order not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders/seller-accept/{id}:
    post:
      tags:
        - Orders
      summary: Seller accept order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_status:
                  type: string
                  example: "cancelled"
                delivery_type:
                  type: string
                  example: "delivery"
                seller_data:
                  type: object
                  example: { "first_name": "John", "last_name": "Doe", "middle_name": "Doe", "phone_number": "+998901234567", "region_id": 1, "location": "(41.311081, 69.240592)" }
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid order data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid order data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders/buyer-accept/{id}:
    post:
      tags:
        - Orders
      summary: Buyer accept order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders/seller-gave/{id}:
    post:
      tags:
        - Orders
      summary: Seller gave order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 1234
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid order data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid order data"

  /orders/seller-cancel/{id}:
    post:
      tags:
        - Orders
      summary: Seller cancel order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: string
                  example: "1"
                reason_text:
                  type: string
                  example: "Other"
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid order data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid order data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders/buyer-cancel/{id}:
    post:
      tags:
        - Orders
      summary: Buyer cancel order
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: string
                  example: "1"
                reason_text:
                  type: string
                  example: "Other"
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Order updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid order data
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid order data"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Order not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Order not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /orders/calculate:
    post:
      tags:
        - Orders
      summary: Calculate delivery
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_type:
                  type: string
                  example: "delivery"
                advert_id:
                  type: string
                  example: "123"
                buyer_point_id:
                  type: string
                  example: "123"
                buyer_region_id:
                  type: integer
                  example: 123
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  delivery_sum: 10000
                  commission: 1000

  /orders/deadline/{id}:
    put:
      tags:
        - Orders
      summary: Update deadline
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Deadline updated successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Order not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Order not found"

  /chats/file:
    post:
      tags:
        - Chat
      summary: chat file upload
      description: chat file upload
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                file_url: https://domain.com/file.jpg
                file_name: file.jpg
                size: 245677
                height: 640
                width: 320

  /chats/seller:
    get:
      tags:
        - Chat
      security:
        - bearerAuth: [ ]
      summary: Get all seller chats
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                - advert_name: Nike futbolka
                  seller_id: 56fc7831-3849-4f59-81ab-efe5bc7c93fa
                  buyer_id: 66f63215-f758-43ff-aa64-bc6fe05888c6

  /chats/buyer:
    get:
      tags:
        - Chat
      security:
        - bearerAuth: [ ]
      summary: get all buyer chats
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                - advert_name: Nike futbolka
                  seller_id: 56fc7831-3849-4f59-81ab-efe5bc7c93fa
                  buyer_id: 66f63215-f758-43ff-aa64-bc6fe05888c6

  /chats/history:
    post:
      tags:
        - Chat
      security:
        - bearerAuth: [ ]
      summary: Get chat history
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - advert_id
                - seller_id
                - buyer_id
                - timestamp
              properties:
                advert_id:
                  type: string
                  example: "123"
                seller_id:
                  type: string
                  example: "123"
                buyer_id:
                  type: string
                  example: "123"
                timestamp:
                  type: string
                  example: 178123132
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  messages:
                    - message: "Hello"
                      sender: "user"
                      timestamp: "2024-04-27T12:34:56Z"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /cards:
    post:
      tags:
        - Cards
      summary: Create card
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  example: "1234567890"
                expire:
                  type: string
                  example: "1224"

      responses:
        200:
          description: Card created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Card created successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"
    get:
      tags:
        - Cards
      summary: Get cards
      security:
        - bearerAuth: [ ]
      parameters:
        - name: usage_type
          in: query
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  - id: 1
                    number: 1234567890
                    expire: 1224
                    is_verified: true
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /cards/verify:
    post:
      tags:
        - Cards
      summary: Verify card
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "123"
                code:
                  type: string
                  example: "1234"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Card verified successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"

  /cards/get-verify-code/{id}:
    get:
      tags:
        - Cards
      summary: Get verify code
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  message: "Verify code sent successfully"
                  request_id: "123e4567-e89b-12d3-a456-426614174000"

  /cards/check:
    post:
      tags:
        - Cards
      summary: Check card
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "123"
                code:
                  type: string
                  example: "1234"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  id: 1
                  number: "123****7890"
                  expire: "12/24"
                  recurrent: true
                  verify: true
                  request_id: "123e4567-e89b-12d3-a456-426614174000"

  /cards/{id}:
    delete:
      tags:
        - Cards
      summary: Remove card
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        200:
          description: Card removed successfully
          content:
            application/json:
              example:
                success: true
                data:
                  success: true
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid card ID
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid card ID"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Card not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Card not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /posts/region:
    get:
      tags:
        - Posts
      summary: Get region
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: name
          in: query
          required: false
          schema:
            type: string
            example: "Toshkent"
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "fargo"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  - id: 1
                    name: "Toshkent"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /posts/point:
    get:
      tags:
        - Posts
      summary: Get point
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: region_id
          in: query
          required: true
          schema:
            type: string
            example: "1"
        - name: name
          in: query
          required: false
          schema:
            type: string
            example: "Toshkent"
        - name: type
          in: query
          required: false
          schema:
            type: string
            example: "fargo"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  - id: 1
                    name: "Toshkent"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /cancelled-reasons:
    get:
      tags:
        - CancelledReasons
      summary: Get all cancelled reasons
      security:
        - bearerAuth: [ ]
      parameters:
        - name: space
          in: query
          required: true
          schema:
            type: string
            example: "1"
            description: "1 - for admin, 2 - for buyer, 3 - for seller"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                success: true
                data:
                  - id: 1
                    name: "Toshkent"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid query parameters
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid query parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /tariff-weights:
    post:
      tags:
        - TariffWeights
      summary: Create a new tariff weight
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from_weight
                - to_weight
              properties:
                name:
                  type: string
                  example: "Tariff A"
                description:
                  type: string
                  example: "Description of tariff A"
                from_weight:
                  type: number
                  example: 0
                to_weight:
                  type: number
                  example: 10
      responses:
        200:
          description: Tariff weight created successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123e4567-e89b-12d3-a456-426614174000"
                  name: "Tariff A"
                  description: "Description of tariff A"
                  fromWeight: 0
                  toWeight: 10
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid input for tariff weight creation
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "Invalid input parameters"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

    get:
      tags:
        - TariffWeights
      summary: List tariff weights
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          schema:
            type: integer
            example: 10
        - name: category_id
          in: query
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        200:
          description: Tariff weights listed successfully
          content:
            application/json:
              example:
                success: true
                data:
                  tariffWeights:
                    - id: "123e4567-e89b-12d3-a456-426614174000"
                      name: "Tariff A"
                      description: "Description of tariff A"
                      fromWeight: 0
                      toWeight: 10
                      createdAt: "2024-04-27T12:34:56Z"
                      updatedAt: "2024-04-27T12:34:56Z"
                  total: 100
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        500:
          description: Failed to list tariff weights
          content:
            application/json:
              example:
                success: false
                error:
                  code: 500
                  message: "Failed to list tariff weights"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

  /tariff-weights/{id}:
    get:
      tags:
        - TariffWeights
      summary: Get tariff weight by ID
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        200:
          description: Tariff weight details retrieved successfully
          content:
            application/json:
              example:
                success: true
                data:
                  id: "123e4567-e89b-12d3-a456-426614174000"
                  name: "Tariff A"
                  description: "Description of tariff A"
                  fromWeight: 0
                  toWeight: 10
                  createdAt: "2024-04-27T12:34:56Z"
                  updatedAt: "2024-04-27T12:34:56Z"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        404:
          description: Tariff weight not found
          content:
            application/json:
              example:
                success: false
                error:
                  code: 404
                  message: "Tariff weight not found"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

    put:
      tags:
        - TariffWeights
      summary: Update tariff weight
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - fromWeight
                - toWeight
              properties:
                name:
                  type: string
                  example: "Tariff A Updated"
                description:
                  type: string
                  example: "Updated description for tariff A"
                fromWeight:
                  type: number
                  example: 1
                toWeight:
                  type: number
                  example: 15
      responses:
        200:
          description: Tariff weight updated successfully
          content:
            application/json:
              example:
                success: true
                data: {}
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        400:
          description: Invalid input or missing id
          content:
            application/json:
              example:
                success: false
                error:
                  code: 400
                  message: "id is required or invalid input"
                request_id: "123e4567-e89b-12d3-a456-426614174000"
        500:
          description: Failed to update tariff weight
          content:
            application/json:
              example:
                success: false
                error:
                  code: 500
                  message: "Failed to update tariff weight"
                request_id: "123e4567-e89b-12d3-a456-426614174000"

    delete:
      tags:
        - TariffWeights
      summary: Delete tariff weight
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tariff weight ID
      responses:
        200:
          description: Deleted successfully
        404:
          description: Not found